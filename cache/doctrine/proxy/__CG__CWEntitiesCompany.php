<?php

namespace DoctrineProxy\__CG__\CW\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Company extends \CW\Entities\Company implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setRecruiter(\CW\Entities\Recruiter $recruiter = NULL)
    {
        $this->__load();
        return parent::setRecruiter($recruiter);
    }

    public function getRecruiter()
    {
        $this->__load();
        return parent::getRecruiter();
    }

    public function addJobLead(\CW\Entities\JobLead $jobLeads)
    {
        $this->__load();
        return parent::addJobLead($jobLeads);
    }

    public function removeJobLead(\CW\Entities\JobLead $jobLeads)
    {
        $this->__load();
        return parent::removeJobLead($jobLeads);
    }

    public function getJobLeads()
    {
        $this->__load();
        return parent::getJobLeads();
    }

    public function addHuman(\CW\Entities\HumanXCompany $humans)
    {
        $this->__load();
        return parent::addHuman($humans);
    }

    public function removeHuman(\CW\Entities\HumanXCompany $humans)
    {
        $this->__load();
        return parent::removeHuman($humans);
    }

    public function getHumans()
    {
        $this->__load();
        return parent::getHumans();
    }

    public function addPhone(\CW\Entities\Phone $phones)
    {
        $this->__load();
        return parent::addPhone($phones);
    }

    public function removePhone(\CW\Entities\Phone $phones)
    {
        $this->__load();
        return parent::removePhone($phones);
    }

    public function getPhones()
    {
        $this->__load();
        return parent::getPhones();
    }

    public function addEmail(\CW\Entities\Email $emails)
    {
        $this->__load();
        return parent::addEmail($emails);
    }

    public function removeEmail(\CW\Entities\Email $emails)
    {
        $this->__load();
        return parent::removeEmail($emails);
    }

    public function getEmails()
    {
        $this->__load();
        return parent::getEmails();
    }

    public function addUrl(\CW\Entities\Url $urls)
    {
        $this->__load();
        return parent::addUrl($urls);
    }

    public function removeUrl(\CW\Entities\Url $urls)
    {
        $this->__load();
        return parent::removeUrl($urls);
    }

    public function getUrls()
    {
        $this->__load();
        return parent::getUrls();
    }

    public function addNote(\CW\Entities\Note $notes)
    {
        $this->__load();
        return parent::addNote($notes);
    }

    public function removeNote(\CW\Entities\Note $notes)
    {
        $this->__load();
        return parent::removeNote($notes);
    }

    public function getNotes()
    {
        $this->__load();
        return parent::getNotes();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'recruiter', 'jobLeads', 'humans', 'phones', 'emails', 'urls', 'notes');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}